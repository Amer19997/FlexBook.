<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EmailAlreadyExist" xml:space="preserve">
    <value>Email Already Exist</value>
  </data>
  <data name="EmailIsRequired" xml:space="preserve">
    <value>Please enter an email address</value>
  </data>
  <data name="EmailLengthNotValid" xml:space="preserve">
    <value>Email Length Not Valid</value>
  </data>
  <data name="InvalidEmail" xml:space="preserve">
    <value>Please enter a valid email address</value>
  </data>
  <data name="InvalidEmailMaxlength100" xml:space="preserve">
    <value>Email max lenght  is 100 </value>
  </data>
  <data name="InvalidEmailOrPass" xml:space="preserve">
    <value>Invalid Email or Password</value>
  </data>
  <data name="InvalidMobileNumber" xml:space="preserve">
    <value>Invalid Mobile Number</value>
  </data>
  <data name="InvalidOTP" xml:space="preserve">
    <value>Invalid OTP</value>
  </data>
  <data name="InvalidPassword" xml:space="preserve">
    <value>Password must be at least 8 characters long and include a mix of letters, numbers, and special characters</value>
  </data>
  <data name="Length24" xml:space="preserve">
    <value>عدد الحروف 24</value>
  </data>
  <data name="MaxLength100" xml:space="preserve">
    <value>Max Length is 100</value>
  </data>
  <data name="MaxLength20" xml:space="preserve">
    <value>الحد الأقصى 20 رقم </value>
  </data>
  <data name="MaxLength24" xml:space="preserve">
    <value>Max Length 24 char</value>
  </data>
  <data name="MinLength2" xml:space="preserve">
    <value>Min Length 2</value>
  </data>
  <data name="MinLength8" xml:space="preserve">
    <value>Password must be at least 8 characters</value>
  </data>
  <data name="MobileNumberAlreadyExist" xml:space="preserve">
    <value>Mobile Number Already Exist</value>
  </data>
  <data name="MobileNumberIsRequired" xml:space="preserve">
    <value>Mobile Number is Required</value>
  </data>
  <data name="MobileNumberLengthNotValid" xml:space="preserve">
    <value>Please enter a valid mobile number.</value>
  </data>
  <data name="MobileNumberNotValid" xml:space="preserve">
    <value>Mobile Number Not Valid</value>
  </data>
  <data name="NameLengthNotValid" xml:space="preserve">
    <value>Name Length Not Valid</value>
  </data>
  <data name="NameRequired" xml:space="preserve">
    <value>Name Required</value>
  </data>
  <data name="OTPIsRequired" xml:space="preserve">
    <value>OTP Is Required</value>
  </data>
  <data name="OtpLengthNotValid" xml:space="preserve">
    <value>OTP Length Not Valid</value>
  </data>
  <data name="OTPNotFound" xml:space="preserve">
    <value>OTP Not Found</value>
  </data>
  <data name="Passworddoesnotmatch" xml:space="preserve">
    <value>Passwords do not match.</value>
  </data>
  <data name="PaswordRequired" xml:space="preserve">
    <value>Pasword Required</value>
  </data>
  <data name="PasswordRequired" xml:space="preserve">
    <value>Password Required</value>
  </data>
  <data name="ResendOTPMustBeAfterMinutes" xml:space="preserve">
    <value>You have exhausted attempts to resend otp . Please wait for the specified time and try again later</value>
  </data>
  <data name="WrongPassword" xml:space="preserve">
    <value>Wrong Password</value>
  </data>
  <data name="InvalidEmailFormat" xml:space="preserve">
    <value>The email should be in the following format: test@test.com</value>
  </data>
  <data name="MaxLength200" xml:space="preserve">
    <value>the allowed max length 200</value>
  </data>
  <data name="InvalidName" xml:space="preserve">
    <value>Plesae enter correct name</value>
  </data>
  <data name="ThisFeildRequired" xml:space="preserve">
    <value>هذا الحقل إلزامي</value>
  </data>
  <data name="MaximumLength2500" xml:space="preserve">
    <value>Maximum Length 2500</value>
  </data>
  <data name="AddedSuccessfully" xml:space="preserve">
    <value>Added Successfully</value>
  </data>
  <data name="IdRequired" xml:space="preserve">
    <value>Id Required</value>
  </data>
  <data name="MaxLength150" xml:space="preserve">
    <value>Max Length 150</value>
  </data>
  <data name="MaxLength4" xml:space="preserve">
    <value>Max Length 4</value>
  </data>
  <data name="MaxLength5" xml:space="preserve">
    <value>Max Length 5</value>
  </data>
  <data name="MaxLength8" xml:space="preserve">
    <value>Max Length 8</value>
  </data>
  <data name="MaximumLength150" xml:space="preserve">
    <value>Max length is 150</value>
  </data>
  <data name="MaximumLength300" xml:space="preserve">
    <value>Max length is 300</value>
  </data>
  <data name="TitleAlreadyExist" xml:space="preserve">
    <value>Title is already exist</value>
  </data>
  <data name="ErrorMessage" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Anupdaterequestisunderreview" xml:space="preserve">
    <value>An update request is under review</value>
  </data>
  <data name="ThisItemExit" xml:space="preserve">
    <value>This Item Exit</value>
  </data>
  <data name="InvalidLogin" xml:space="preserve">
    <value>Invalid email or password</value>
  </data>
  <data name="EmailNotFound" xml:space="preserve">
    <value>Email not found</value>
  </data>
  <data name="WrongOTP" xml:space="preserve">
    <value>Invalid code, please try again</value>
  </data>
  <data name="PleaseTryAfter{0}" xml:space="preserve">
    <value>Please Retry After {0} min</value>
  </data>
  <data name="YouAreLocked" xml:space="preserve">
    <value>You Are Locked try after few minutes</value>
  </data>
  <data name="PleaseEnterEmail" xml:space="preserve">
    <value>Please enter a valid email address</value>
  </data>
  <data name="PleaseEnterFirstName" xml:space="preserve">
    <value>يرجى إدخال الاسم الأول</value>
  </data>
  <data name="PleaseEnterLastName" xml:space="preserve">
    <value>Please enter your last name</value>
  </data>
  <data name="ThisEmailAlerdyFound" xml:space="preserve">
    <value>Email already in use, please log in</value>
  </data>
  <data name="MobileRequired" xml:space="preserve">
    <value>Please enter a valid mobile number.</value>
  </data>
  <data name="CountryRequired" xml:space="preserve">
    <value>Please select your country.</value>
  </data>
  <data name="DepartmentRequired" xml:space="preserve">
    <value>Please select or enter your department.</value>
  </data>
  <data name="facultyRequired" xml:space="preserve">
    <value>Please select or enter your Faculty</value>
  </data>
  <data name="DecryptionKeyRequired" xml:space="preserve">
    <value>Must enter OTP</value>
  </data>
  <data name="UniversityRequired" xml:space="preserve">
    <value>Please select or enter your university.</value>
  </data>
  <data name="NoteLength" xml:space="preserve">
    <value>Comments should not exceed 250 characters.</value>
  </data>
  <data name="VerifyPaswordRequired" xml:space="preserve">
    <value>Verify Pasword Required</value>
  </data>
  <data name="Course with the given ID was not found." xml:space="preserve">
    <value>Course was not found.</value>
  </data>
</root>